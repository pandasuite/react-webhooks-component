import React from 'react';
import { useIntl } from 'react-intl';
import uniqueId from 'lodash/uniqueId';

import PandaBridgeComponent, { usePandaBridge } from 'pandasuite-bridge-react';
import { Button } from 'pandasuite-bridge-react/lib/ui';

function App() {
  const intl = useIntl();
  const {
    /* We retrieve the properties defined in the pandasuite.json file */
    properties,
    /* We retrieve the markers defined in the pandasuite.json file
      but also those defined dynamically by the user when creating in the studio.
      See ```getSnapshotDataHook``` */
    markers,
    /* We retrieve the resources defined in the pandasuite.json file */
    resources,
    /* This is the last marker that was triggered. We can retrieve its data
      but we can also retrieve its parameters. */
    triggeredMarker,
  } = usePandaBridge(
    /* Hooks */
    {
      markers: {
        /* This method is auto-generated
          it's called up by clicking on "Add Marker" from the studio. */
        getSnapshotDataHook: () => ({ id: uniqueId() }),
      },
      actions: {},
      synchronization: {},
      component: {
        /* This method is auto-generated
          It's automatically called by the studio to get a visual representation
          of the component.
          A default image is generated by the react library but you can override it
          by redefining the method. */
        getScreenshotHook: (resultCallback) => null,
        /* When the flag localization is true in pandasuite.json system.
          The method is called with the new args.language.
          You don't need it if you just use the resources.
          The new value is passed each time the language changes. */
        onLanguageChanged: (args) => null,
      },
    },
  );

  /* Or you can use, instead of hooks, directly the component
    that will work on the same principle. */
  return (
    <PandaBridgeComponent
      markers={{}}
      actions={{}}
      synchronization={{}}
    >
      {({
        properties, markers, resources, triggeredMarker,
      }) => (
        <Button>
          {intl.formatMessage({ id: 'request.button.title' })}
        </Button>
      )}
    </PandaBridgeComponent>
  );
}

export default App;
